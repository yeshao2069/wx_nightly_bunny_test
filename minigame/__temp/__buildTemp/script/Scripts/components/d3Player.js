"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var engine_1 = require("engine");
var collider_1 = require("../commons/collider");
var dataCenter_1 = require("../commons/dataCenter");
var eventCenter_1 = require("../commons/eventCenter");
var d3Bullet_1 = require("./d3Bullet");
var POS_LIMIT = {
    x: [-30, 30],
    z: [-54, 14.3],
};
var D3Player = (function (_super) {
    tslib_1.__extends(D3Player, _super);
    function D3Player() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bulletPrefab = null;
        _this.bulletInterval = 0.3;
        _this.bulletTime = 0;
        _this.player = null;
        _this.hurtParticle = null;
        _this.speed = 10;
        _this.direction = engine_1.default.Vector3.ZERO.clone();
        _this.rotation = engine_1.default.Vector3.ZERO.clone();
        _this.bound = engine_1.default.Vector3.createFromNumber(2.75 / 2, 0.46 / 2, 0.5 / 2);
        return _this;
    }
    D3Player.prototype.onAwake = function () {
        console.log("onAwake D3Player");
        this.player = this.entity;
        dataCenter_1.default.playerEntity = this.player;
        dataCenter_1.default.playerComp = this;
        this.hurtParticle = this.player.transform._children[0].findChildByName("Hurt").entity.getComponent(engine_1.default.Particle);
        this.initEvent();
        this.initPrefab();
        collider_1.default.watch(this, ["player"]);
        eventCenter_1.default.emit(eventCenter_1.default.ADD_PLAYER);
    };
    D3Player.prototype.onUpdate = function (dt) {
        if (this.player) {
            this.updateMove(dt);
            this.updateBullet(dt);
        }
    };
    D3Player.prototype.initPrefab = function () {
        var _this = this;
        engine_1.default.loader.load("resource/Bullet.prefab").promise.then(function (prefab) {
            _this.bulletPrefab = prefab;
        });
    };
    D3Player.prototype.initEvent = function () {
        var _this = this;
        eventCenter_1.default.on(eventCenter_1.default.TOUCH_MOVE, function (direction) {
            _this.direction.x = direction.x;
            _this.direction.y = direction.y;
            _this.direction.z = direction.z;
            if (direction.x === 0) {
                _this.rotation.x = 0;
                _this.rotation.z = 0;
            }
            else {
                _this.rotation.x = 0.01;
                _this.rotation.z = direction.x < 0 ? 0.01 : -0.01;
            }
        });
        eventCenter_1.default.on(eventCenter_1.default.HURT_PLAYER, function () {
            _this.hurtParticle.emitter.start = true;
        });
        eventCenter_1.default.on(eventCenter_1.default.START_SHOOT, function () {
            _this.bulletInterval = 0.1;
        });
        eventCenter_1.default.on(eventCenter_1.default.END_SHOOT, function () {
            _this.bulletInterval = 0.3;
        });
    };
    D3Player.prototype.updateMove = function (dt) {
        for (var k in POS_LIMIT) {
            if (this.rotation[k] === 0) {
                this.player.transform.euler[k] = 0;
            }
            else {
                this.player.transform.euler[k] += this.rotation[k];
                if (this.player.transform.euler[k] > 0.2) {
                    this.player.transform.euler[k] = 0.2;
                }
                else if (this.player.transform.euler[k] < -0.2) {
                    this.player.transform.euler[k] = -0.2;
                }
            }
        }
        var move = {
            x: this.speed * this.direction.x * dt,
            y: this.speed * this.direction.y * dt,
            z: this.speed * this.direction.z * dt,
        };
        var pos = this.player.transform.position;
        for (var k in POS_LIMIT) {
            if (pos[k] + move[k] < POS_LIMIT[k][0]
                ||
                    pos[k] + move[k] > POS_LIMIT[k][1]) {
                move[k] = 0;
            }
            this.player.transform.position[k] += move[k];
        }
        if (move.x !== 0 || move.y !== 0 || move.z !== 0) {
            eventCenter_1.default.emit(eventCenter_1.default.MOVE_PLAYER, move);
        }
    };
    D3Player.prototype.updateBullet = function (dt) {
        if (!this.bulletPrefab) {
            return;
        }
        this.bulletTime += dt;
        if (this.bulletTime >= this.bulletInterval) {
            var entity = this.bulletPrefab.instantiate();
            var script = entity.addComponent(d3Bullet_1.default);
            entity.transform.position = this.player.transform.position.clone();
            script.direction.z = -1;
            dataCenter_1.default.worldEntity.transform.addChild(entity.transform);
            this.bulletTime -= this.bulletInterval;
        }
    };
    D3Player = tslib_1.__decorate([
        engine_1.default.decorators.serialize("D3Player")
    ], D3Player);
    return D3Player;
}(engine_1.default.Script));
exports.default = D3Player;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
