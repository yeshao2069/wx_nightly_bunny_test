"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var engine_1 = require("engine");
var eventCenter_1 = require("../commons/eventCenter");
var SCREEN_WIDTH = engine_1.default.device.screenWidth;
var SCREEN_HEIGHT = engine_1.default.device.screenHeight;
var GAME_WIDTH = engine_1.default.adaptation.frameWidth;
var GAME_HEIGHT = engine_1.default.adaptation.frameHeight;
var D2Move = (function (_super) {
    tslib_1.__extends(D2Move, _super);
    function D2Move(entity) {
        var _this = _super.call(this, entity) || this;
        _this.entity = entity;
        _this.buttonPos = engine_1.default.Vector2.ZERO.clone();
        _this.buttonRadius = { x: 0, y: 0 };
        _this.direction = engine_1.default.Vector2.ZERO.clone();
        _this.uisprite = null;
        _this.uiInput = null;
        _this.onTouchStart = _this.onTouchStart.bind(_this);
        _this.onTouchEnter = _this.onTouchEnter.bind(_this);
        _this.onTouchMove = _this.onTouchMove.bind(_this);
        _this.onTouchEnd = _this.onTouchEnd.bind(_this);
        _this.onTouchLeave = _this.onTouchLeave.bind(_this);
        return _this;
    }
    D2Move.prototype.onAwake = function () {
        this.uisprite = this.entity.getComponent(engine_1.default.UISprite);
        this.buttonPos = this.entity.transform2D.worldPosition.clone();
        this.buttonRadius = { x: this.entity.transform2D.size.x / 2, y: this.entity.transform2D.size.y / 2 };
    };
    D2Move.prototype.onEnable = function () {
        this.uiInput = this.getComponent(engine_1.default.TouchInputComponent);
        if (this.uiInput) {
            this.uiInput.onTouchStart.add(this.onTouchStart);
            this.uiInput.onTouchEnter.add(this.onTouchEnter);
            this.uiInput.onTouchEnd.add(this.onTouchEnd);
            this.uiInput.onTouchLeave.add(this.onTouchLeave);
            this.uiInput.onTouchMove.add(this.onTouchMove);
        }
    };
    D2Move.prototype.onDisable = function () {
        if (this.uiInput) {
            this.uiInput.onTouchStart.remove(this.onTouchStart);
            this.uiInput.onTouchEnter.remove(this.onTouchEnter);
            this.uiInput.onTouchEnd.remove(this.onTouchEnd);
            this.uiInput.onTouchLeave.remove(this.onTouchLeave);
            this.uiInput.onTouchMove.remove(this.onTouchMove);
        }
    };
    D2Move.prototype.onTouchStart = function (s, e) {
        this.setAlpha(200);
        this.handleTouch(e);
    };
    D2Move.prototype.onTouchEnter = function (s, e) {
        this.setAlpha(200);
        this.handleTouch(e);
    };
    D2Move.prototype.onTouchMove = function (s, e) {
        this.handleTouch(e);
    };
    D2Move.prototype.onTouchLeave = function (s, e) {
        this.setAlpha(255);
        this.emitDirection({ x: 0, y: 0, z: 0 });
    };
    D2Move.prototype.onTouchEnd = function (s, e) {
        this.setAlpha(255);
        this.emitDirection({ x: 0, y: 0, z: 0 });
    };
    D2Move.prototype.handleTouch = function (e) {
        this.direction.x = e.touches[0].position.x / this.buttonRadius.x;
        this.direction.y = e.touches[0].position.y / this.buttonRadius.y;
        this.emitDirection({ x: this.direction.x, y: 0, z: -this.direction.y });
    };
    D2Move.prototype.setAlpha = function (val) {
        var c = this.uisprite.color.clone();
        c.a = val;
        this.uisprite.color = c;
    };
    D2Move.prototype.emitDirection = function (direction) {
        eventCenter_1.default.emit(eventCenter_1.default.TOUCH_MOVE, direction);
    };
    D2Move.prototype.gamePosToScreen = function (pos) {
        var p = engine_1.default.Vector2.ZERO.clone();
        p.x = SCREEN_WIDTH / GAME_WIDTH * pos.x;
        p.y = SCREEN_HEIGHT / GAME_HEIGHT * pos.y;
        return p;
    };
    D2Move.prototype.canvasPosToScreen = function (pos) {
        pos.x = pos.x - SCREEN_WIDTH / 2;
        pos.y = -pos.y + SCREEN_HEIGHT / 2;
        return pos;
    };
    D2Move = tslib_1.__decorate([
        engine_1.default.decorators.serialize("D2Move")
    ], D2Move);
    return D2Move;
}(engine_1.default.Script));
exports.default = D2Move;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
